<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.me.java.mapper.UserMapper" >

	<!--
		开启mapper的namespace 二级缓存
		type是使用的cache类型， LoggingEhcache 会记录下日志，如果不需要日志的话可以使用 EhcacheCache 
		这样配置之后，所以的操作都会执行缓存，如果有的操作不需要的话，可以在sql配置里将useCache设置为 false
		mybatis默认使用PerpetualCache 要和ehcache整合，需要配置type为ehcache实现cache接口的类型
	 
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
 -->
 <cache/>
  <resultMap id="BaseResultMap" type="com.me.java.entity.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="loginid" property="loginid" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="lockState" property="lockstate" jdbcType="BIT" />
    <result column="regdate" property="regdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, loginid, passwd, level, lockState, regdate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.me.java.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.me.java.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.me.java.entity.User" >
    insert into user (id, loginid, passwd, 
      level, lockState, regdate
      )
    values (#{id,jdbcType=VARCHAR}, #{loginid,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT}, #{lockstate,jdbcType=BIT}, #{regdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.me.java.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginid != null" >
        loginid,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="lockstate != null" >
        lockState,
      </if>
      <if test="regdate != null" >
        regdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginid != null" >
        #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="lockstate != null" >
        #{lockstate,jdbcType=BIT},
      </if>
      <if test="regdate != null" >
        #{regdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.me.java.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.loginid != null" >
        loginid = #{record.loginid,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null" >
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.lockstate != null" >
        lockState = #{record.lockstate,jdbcType=BIT},
      </if>
      <if test="record.regdate != null" >
        regdate = #{record.regdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      loginid = #{record.loginid,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=TINYINT},
      lockState = #{record.lockstate,jdbcType=BIT},
      regdate = #{record.regdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.me.java.entity.User" >
    update user
    <set >
      <if test="loginid != null" >
        loginid = #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="lockstate != null" >
        lockState = #{lockstate,jdbcType=BIT},
      </if>
      <if test="regdate != null" >
        regdate = #{regdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.me.java.entity.User" >
    update user
    set loginid = #{loginid,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      lockState = #{lockstate,jdbcType=BIT},
      regdate = #{regdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
   <select id="selectByLoginId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where loginid = #{loginid,jdbcType=VARCHAR}
  </select>
</mapper>