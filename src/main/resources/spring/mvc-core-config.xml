<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for PetClinic's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="mvc-view-config.xml"/>

    <!--
        - POJOs labeled with the @Controller and @Service annotations are auto-detected.
    -->
    <context:component-scan base-package="com.me.java.web" />
    <context:component-scan base-package="com.me.java.service" />
    
    <!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->        
    <mvc:annotation-driven />
    
    <!--  <
    <mvc:interceptors>
        <bean class="com.me.base.web.springmvc.ControlerHandlerInterceptor"/> 
    </mvc:interceptors>
	-->
    <!--  all resources inside folder src/main/webapp/resources are mapped so they can be refered to inside JSP files
        (see header.jsp for more details) -->
    
    <!--<mvc:resources mapping="/resources/**" location="/resources/"/>-->
    
    <!--<mvc:view-controller path="/" view-name="welcome" />-->

    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <!--  <bean class="org.springframework.samples.petclinic.web.PetTypeFormatter"/>-->
            </set>
        </property>
    </bean>

	<!-- 配置 文件上传的支持 -->  
	<!-- SpringMVC上传文件时,需配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 指定所上传文件的总大小不能超过2M(2097152) (单位为K)......注意maxUploadSize属性的限制不是针对单个文件,而是所有文件的容量之和 -->
        <!-- -1为不限制 -->
        <property name="maxUploadSize" value="-1"/>
        <!-- 最大内存 -->
        <property name="maxInMemorySize" value="4096"/>
         <!--resolveLazily属性启用是为了推迟文件解析，以便在FileUploadController 中捕获文件大小异常-->
        <property name="resolveLazily" value="true"/> 
        <property name="defaultEncoding" value="UTF-8"/>  
	</bean>

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Files are stored inside src/main/resources
    -->
      
    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
          p:basename="messages/messages"/>-->

    <!--
        - This bean resolves specific types of exceptions to corresponding logical 
        - view names for error views.
    -->
    
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver (declared in mvc-view-config.xml) -->
        <property name="defaultErrorView" value="exception"/>
        <!-- results into 'WEB-INF/jsp/exception.jsp' -->
        <property name="warnLogCategory" value="warn"/>
        <!-- needed otherwise exceptions won't be logged anywhere -->
        <property name="exceptionMappings">
        	<props>
        		<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/jsp/error.jsp页面 -->
        		<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop>
        	</props>
        </property>
    </bean>

</beans>
